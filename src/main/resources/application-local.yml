management:
  endpoints:
    web:
      exposure:
        include: health, metrics, info
  endpoint:
    health:
      show-details: always
  server:
    port: 3001
      #ssl:
      #key-store-type: PKCS12
      #key-store: classpath:localhost.p12
    #key-alias: localhost
    #http2:
    #enabled: true

spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  application:
    name: java-spring-minazuki
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true

  grpc:
#    enabled: true
#    port: 1900
      #validation:
    #interceptor-order: 10

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: 2716

  jpa:
    properties:
      hibernate:
        default_schema: public
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  logging:
    level:
      root: INFO
      com.y3technologies: INFO
      org.zalando.logbook: INFO
    pattern:
      console: '%-130(%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p ${PID} - [%8.15t] %clr(%C{1}.%M:){cyan}%clr(%L){red}) - %m%n'
      file: '%-130(%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p ${PID} - [%8.15t] %C{1}.%M:%L) - %m%n'

        # kafka config
        #jackson:
        #serialization:
        #fail-on-empty-beans: false
        #kafka:
        #bootstrap-servers: localhost:9092
        #producer:
        #value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        #acks: -1
        #retries: 1
        #properties:
        #[request.timeout.ms]: 10
        #[enable.idempotence]: true
      #[max.in.flight.request.per.connection]: 5

  # excel config
  excel:
    max:
      row:
        allowed: 2000

        # redis config
        #redis:
        #port: 6379
        #host: localhost
        #username: thaitx
        #password: 123456

        # rabbit mq config
        #rabbitmq:
        #host: localhost
        #port: 5672
        #listener:
        #simple:
        #default-requeue-rejected: false

  data:
    mongodb:
      host: localhost
      port: 27017
      database: Electronics

  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        register: true
        service-id: Electronics-Client-Service-01
        service-name: ${spring.application.name}
        health-check:
          protocol: HTTP
          uri: /actuator/health
          interval: 5s

